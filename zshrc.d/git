alias gai="git add -i"
alias gap="git add -p"
alias gpa=gap
alias gdc="git diff --cached"
alias gd="git diff"
alias gdw="git diff --word-diff"
alias gs="git status"
alias gl="git log --graph --all --pretty=format:'%Cred%h%Creset - %Cgreen(%cr)%Creset %s%C(yellow)%d%Creset' --abbrev-commit --date=relative"
gcm() {
    git commit -m "$@"
}
alias gca="git commit --amend"
alias gpr="git pull --rebase"
gpu() {
    git rmpycs
    git testff "${@}" || return ${?}
    git push
}
alias grhh="git reset --hard HEAD"
alias gl1u="git log -1 -u"
alias gco="git checkout"

grb() {
    if (( $# == 0 ))
    then
        git recent-branches
        return
    fi
    local NUM="${1}"
    local BRANCH=$(git recent-branches | ack "\s${NUM}\s" | cut -f2)
    git checkout "${BRANCH}"
}

lint() {
    root=$(git rev-parse --show-toplevel)
    files=$(git diff --cached --name-only | grep "\.py" | sed -e "s#.*#${root}/&#" | tr '\n' ' ')
    if [ -n "$files" ]; then
        echo "${root}/setup.cfg"
        flake8 --config="${root}/setup.cfg" --jobs=auto $files

        if [ $? -ne 0 ]; then
            exit 1
        else
            echo "(No issues)"
        fi
    else
        echo "Nothing staged"
    fi
}

la() {
    root=$(git rev-parse --show-toplevel)
    files=$(git diff HEAD --name-only | grep "\.py" | sed -e "s#.*#${root}/&#" | tr '\n' ' ')
    if [ -n "$files" ]; then
        echo "${root}/setup.cfg"
        echo $files
        flake8 --config="${root}/setup.cfg" --jobs=auto $files

        if [ $? -ne 0 ]; then
            exit 1
        else
            echo "(No issues)"
        fi
    else
        echo "No changes"
    fi
}


git config --global alias.lint 'li'
git config --global alias.rmpycs '!find . -name "*.pyc" -delete'
git config --global alias.test '!`find -maxdepth 2 -name manage.py` test --parallel=8'
git config --global alias.testff '!`find -maxdepth 2 -name manage.py` test --parallel=8 --failfast'
git config --global alias.lint '!`find -maxdepth 2 -name manage.py` lint'
git config --global alias.recent-branches "!git for-each-ref --sort=-committerdate --count=25 --format='%(refname:short)' refs/heads/ | nl"


git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"

git config --global color.ui true

git config --global color.diff-highlight.oldNormal    "red bold"
git config --global color.diff-highlight.oldHighlight "red bold 52"
git config --global color.diff-highlight.newNormal    "green bold"
git config --global color.diff-highlight.newHighlight "green bold 22"

git config --global color.diff.meta       "yellow"
git config --global color.diff.frag       "magenta bold"
git config --global color.diff.commit     "yellow bold"
git config --global color.diff.old        "red bold"
git config --global color.diff.new        "green bold"
git config --global color.diff.whitespace "red reverse"
